name: Build and Publish ClickOnce (WPF .NET 8 - TesteAutoG com setup.exe)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    env:
      PROJECT_PATH: ./TesteAutoG/TesteAutoG.csproj
      PUBLISH_PROFILE: ClickOnceProfile
      PUBLISH_DIR: publish

    steps:
      # 1️⃣ Clona o repositório
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Instala o Visual Studio Build Tools (Desktop workload)
      - name: Install Visual Studio Build Tools
        run: |
          choco install visualstudio2022buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.ManagedDesktopBuildTools --includeRecommended --includeOptional --quiet --norestart" --yes
          echo "✅ Visual Studio Build Tools instalado com sucesso."

      # 3️⃣ Instala o .NET 8 SDK
      - name: Setup .NET 8 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      # 4️⃣ Restaura os pacotes NuGet
      - name: Restore NuGet packages
        run: dotnet restore $env:PROJECT_PATH

      # 5️⃣ Lê a versão do projeto
      - name: Read project version
        id: get_version
        shell: pwsh
        run: |
          [xml]$proj = Get-Content "$env:PROJECT_PATH"
          $version = $proj.Project.PropertyGroup.Version
          if (-not $version) {
            Write-Host "⚠️ Nenhuma versão encontrada; usando 1.0.0.0"
            $version = "1.0.0.0"
          }
          echo "version=$version" >> $env:GITHUB_OUTPUT

      # 6️⃣ Publica o ClickOnce via MSBuild clássico (com setup.exe)
      - name: Publish ClickOnce (via MSBuild clássico)
        shell: pwsh
        run: |
          & "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\MSBuild\Current\Bin\MSBuild.exe" `
            "$env:PROJECT_PATH" `
            /p:PublishProfile=$env:PUBLISH_PROFILE `
            /p:PublishDir=$env:PUBLISH_DIR `
            /p:ApplicationVersion=${{ steps.get_version.outputs.version }} `
            /p:SignManifests=false `
            /p:GenerateBootstrapper=true `
            /p:PublishProtocol=FileSystem `
            /p:Configuration=Release

      # 7️⃣ Lista o conteúdo gerado (debug)
      - name: List publish output
        shell: pwsh
        run: Get-ChildItem -Recurse $env:PUBLISH_DIR | ForEach-Object { $_.FullName }

      # 8️⃣ Cria a Release no GitHub com setup.exe e Application Files
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: "Versão ${{ steps.get_version.outputs.version }}"
          tag_name: "v${{ steps.get_version.outputs.version }}"
          body: "Publicação automática ClickOnce (.NET 8 WPF - TesteAutoG)"
          files: |
            "${{ env.PUBLISH_DIR }}/setup.exe"
            "${{ env.PUBLISH_DIR }}/TesteAutoG.application"
            "${{ env.PUBLISH_DIR }}/Application Files/**/*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
