name: Build & Publish ClickOnce (WPF .NET 8 - TesteAutoG)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    env:
      PROJECT_PATH: ./TesteAutoG/TesteAutoG.csproj
      PUBLISH_DIR: publish

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      # L√™ <Version> de TesteAutoG.csproj; se n√£o houver, tenta Directory.Build.props; se ainda assim n√£o houver, usa 1.0.0.0
      - name: Read version from project
        id: get_version
        shell: pwsh
        run: |
          function Get-VersionFromXml($path) {
            if (Test-Path $path) {
              [xml]$xml = Get-Content $path
              $ver = $xml.Project.PropertyGroup.Version
              if ($ver) { return $ver }
            }
            return $null
          }
          $version = Get-VersionFromXml "$env:PROJECT_PATH"
          if (-not $version -and (Test-Path "./Directory.Build.props")) {
            $version = Get-VersionFromXml "./Directory.Build.props"
          }
          if (-not $version) {
            Write-Host "‚ö†Ô∏è Tag <Version> n√£o encontrada; usando 1.0.0.0"
            $version = "1.0.0.0"
          }
          Write-Host "üîñ Projeto em vers√£o: $version"
          "version=$version" >> $env:GITHUB_OUTPUT

      - name: Restore
        run: dotnet restore $env:PROJECT_PATH

      # Publica√ß√£o ClickOnce sem profile (propriedades essenciais)
      - name: Publish ClickOnce
        run: |
          dotnet publish $env:PROJECT_PATH -c Release `
            -p:PublishDir=$env:PUBLISH_DIR\ `
            -p:RuntimeIdentifier=win-x64 `
            -p:SelfContained=false `
            -p:PublishSingleFile=false `
            -p:GenerateClickOnceManifests=true `
            -p:Install=true `
            -p:InstallFrom=Web `
            -p:UpdateEnabled=true `
            -p:UpdateMode=Foreground `
            -p:UpdateInterval=0 `
            -p:UpdateIntervalUnits=Days `
            -p:PublisherName="TesteAutoG" `
            -p:ProductName="TesteAutoG" `
            -p:ApplicationVersion=${{ steps.get_version.outputs.version }} `
            -p:ApplicationRevision=0

      # (Opcional) Lista o que foi gerado para facilitar debug
      - name: List publish output
        shell: pwsh
        run: |
          Write-Host "üìÅ Conte√∫do de $env:PUBLISH_DIR"
          Get-ChildItem -Recurse $env:PUBLISH_DIR | ForEach-Object { $_.FullName }

      # Cria/atualiza a Release usando exatamente a vers√£o do projeto
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: "Vers√£o ${{ steps.get_version.outputs.version }}"
          tag_name: "v${{ steps.get_version.outputs.version }}"
          body: "Build autom√°tica ClickOnce (.NET 8 WPF - TesteAutoG)"
          files: |
            "${{ env.PUBLISH_DIR }}/setup.exe"
            "${{ env.PUBLISH_DIR }}/TesteAutoG.application"
            "${{ env.PUBLISH_DIR }}/Application Files/**/*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
